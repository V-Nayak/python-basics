import tkinter as tk
from tkinter import ttk
from tkinter import messagebox
from pymongo import MongoClient

def save_to_db(name, mobile, email):
    # Connect to MongoDB
    client = MongoClient("mongodb://localhost:27017/")
    db = client['july15_database']
    collection = db['user_collection']
    
    # Create a document to insert
    user_data = {
        'name': name,
        'mobile': mobile,
        'email': email
    }
    
    # Insert the document into the collection
    collection.insert_one(user_data)
    messagebox.showinfo("Success", "Data saved successfully!")

def submit():
    name = name_entry.get()
    mobile = mobile_entry.get()
    email = email_entry.get()
    
    if name and mobile and email:
        save_to_db(name, mobile, email)
        
        # Clear the entry fields after saving
        name_entry.delete(0, tk.END)
        mobile_entry.delete(0, tk.END)
        email_entry.delete(0, tk.END)
        
        # Display the saved data
        display_data()
    else:
        messagebox.showwarning("Input Error", "Please fill in all fields.")

def display_data():
    # Connect to MongoDB
    client = MongoClient("mongodb://localhost:27017/")
    db = client['july15_database']
    collection = db['user_collection']
    
    # Retrieve all documents from the collection
    data = list(collection.find({}, {'_id': 0}))
    
    # Clear the Treeview
    for item in tree.get_children():
        tree.delete(item)

    # Insert the data into the Treeview with serial numbers
    for index, doc in enumerate(data, start=101):
        tree.insert("", tk.END, values=(index, doc['name'], doc['mobile'], doc['email']))
    
    # Insert the data into the Treeview
   # for doc in data:
    #    tree.insert("", tk.END, values=(doc['name'], doc['mobile'], doc['email']))

# Create the main window
root = tk.Tk()
root.title("User Information Form")

# Create and place the labels and entry widgets
tk.Label(root, text="Name").grid(row=0, column=0, padx=10, pady=10)
tk.Label(root, text="Mobile No").grid(row=1, column=0, padx=10, pady=10)
tk.Label(root, text="Email").grid(row=2, column=0, padx=10, pady=10)

name_entry = tk.Entry(root)
mobile_entry = tk.Entry(root)
email_entry = tk.Entry(root)

name_entry.grid(row=0, column=1, padx=10, pady=10)
mobile_entry.grid(row=1, column=1, padx=10, pady=10)
email_entry.grid(row=2, column=1, padx=10, pady=10)

# Create and place the submit button
submit_button = tk.Button(root, text="Submit", command=submit)
submit_button.grid(row=3, column=0, columnspan=4, pady=20)

# Create and place the Treeview widget
tree = ttk.Treeview(root, columns=("Sr.No","Name", "Mobile", "Email"), show='headings')
tree.heading("Sr.No",text="Sr.No")
tree.heading("Name", text="Name")
tree.heading("Mobile", text="Mobile No")
tree.heading("Email", text="Email")
tree.grid(row=4, column=0, columnspan=2, padx=10, pady=10)

# Run the main event loop
root.mainloop()